// //
// // tokens
// //

// // Dependencies
// @import 'config/tokens';


// // Declarations
$screen-mobile: #{map-get(map-get($tokens, 'screens'), 'small')};
$screen-tablet: #{map-get(map-get($tokens, 'screens'), 'medium')};
$screen-desktop: #{map-get(map-get($tokens, 'screens'), 'large')};
$screen-desktop-large: #{map-get(map-get($tokens, 'screens'), 'xlarge')};

$bp-x-small: (media: "screen and (max-width: " + $screen-mobile + ")");
$bp-small: (media: "screen and (min-width: " + $screen-mobile + ")");
$bp-medium: (media: "screen and (min-width: " + $screen-tablet + ")");
$bp-large: (media: "screen and (min-width: " + $screen-desktop + ")");
$bp-xlarge: (media: "screen and (min-width: " + $screen-desktop-large + ")");

$bp-mobile-only: (media: "screen and (max-width: " + $screen-desktop + ")");

// @mixin screens($screens: map-get($tokens, 'screens')) {
//   $variant: '' !global; // !global allows us to "pass" $variant to the @content
//   @content; // mobile first... then other breakpoints
//   @each $screen, $s in $screens {
//     @media (min-width: #{$s}px) {
//       $variant: $screen + '\\:' !global;
//       @content;
//     }
//   }
//   $variant: '' !global;
// }

@mixin retina() {

  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
    @content;
  }

}

// .o-0 {
//   opacity: 0;
// }

// .pe-none {
//   pointer-events: none;
// }

// .nowrap {
//   white-space: nowrap;
// }